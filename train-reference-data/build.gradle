dependencies {
    compile 'com.hazelcast:hazelcast-client:3.6.2'
    compile 'com.esotericsoftware:kryo:3.0.3'
}

jar {
    from {
        configurations.compile.filter( {! (it.name =~ /.*junit.*\.jar/ )}).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes("Main-Class": "Main" )
    }
}

task(copyrefdata, type: Copy) {
    from(file('/var/trainwatch/data'))
    into(buildDir)
}

task dockerbuild(dependsOn: ["build", "copyrefdata"]) << { 
    println "*** building docker tw-populate-ref-data ***" 
    exec {
      executable "docker"
      args "build","--no-cache", "-q", "-t", "eatcode/tw-populate-ref-data", "."
    }
}

task dockerpush(dependsOn: []) << {
    println "*** pushing docker tw-populate-ref-data ***"
    exec {
      executable "docker"
      args "push", "eatcode/tw-populate-ref-data"
    }
}




